{"uid":"665e716ead7f872b","name":"Delete a not existing author","fullName":"src/test/resources/features/Authors.feature:155","historyId":"41be8934da237ff838754af312bb472","time":{"start":1755181215611,"stop":1755181216570,"duration":959},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 404(file:///app/src/test/resources/features/Authors.feature:151)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 404(file:///app/src/test/resources/features/Authors.feature:151)\n","steps":[{"name":"Given  an author with ID 400 does not exist","time":{"start":1755181215611,"stop":1755181216250,"duration":639},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When  I delete the author with ID: 400","time":{"start":1755181216251,"stop":1755181216568,"duration":317},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then  the response status code should be 404","time":{"start":1755181216568,"stop":1755181216569,"duration":1},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 404 | Actual: 200 expected:<404> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 404(file:///app/src/test/resources/features/Authors.feature:151)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"And  the response should contain an error message with title: \"Not Found\"","time":{"start":1755181216569,"stop":1755181216570,"duration":1},"status":"skipped","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"26469b272965"},{"name":"thread","value":"56@26469b272965.main(1)"},{"name":"feature","value":"Authors"},{"name":"story","value":"Delete a not existing author"},{"name":"suite","value":"Authors"},{"name":"testClass","value":"Delete a not existing author"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///app/src/test/resources/features/Authors.feature"},{"name":"package","value":"src.test.resources.features.Authors_feature.Authors"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"id","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"665e716ead7f872b.json","parameterValues":["400"]}