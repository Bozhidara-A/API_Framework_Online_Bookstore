{"uid":"3fef4d5194109d89","name":"Create an author with already existing ID","fullName":"src/test/resources/features/Authors.feature:78","historyId":"eb738b70451aebe93c36f1db7ab16049","time":{"start":1755125862824,"stop":1755125863791,"duration":967},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 400(file:///app/src/test/resources/features/Authors.feature:75)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 400(file:///app/src/test/resources/features/Authors.feature:75)\n","steps":[{"name":"Given  an author with ID 300 exists","time":{"start":1755125862824,"stop":1755125863306,"duration":482},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When  I create an author with ID: 300, Book ID: 100, First Name: \"John\", Last Name: \"Doe\"","time":{"start":1755125863306,"stop":1755125863785,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then  the response status code should be 400","time":{"start":1755125863785,"stop":1755125863789,"duration":4},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 400 | Actual: 200 expected:<400> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 400(file:///app/src/test/resources/features/Authors.feature:75)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"39a429b8df31"},{"name":"thread","value":"67@39a429b8df31.main(1)"},{"name":"feature","value":"Authors"},{"name":"story","value":"Create an author with already existing ID"},{"name":"suite","value":"Authors"},{"name":"testClass","value":"Create an author with already existing ID"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///app/src/test/resources/features/Authors.feature"},{"name":"package","value":"src.test.resources.features.Authors_feature.Authors"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"book_id","value":"100"},{"name":"first_name","value":"\"John\""},{"name":"id","value":"300"},{"name":"last_name","value":"\"Doe\""}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"3fef4d5194109d89.json","parameterValues":["100","\"John\"","300","\"Doe\""]}