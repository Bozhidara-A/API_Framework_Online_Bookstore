{"uid":"72e0072b23abe9cc","name":"Update a book ID to already existing ID","fullName":"src/test/resources/features/Books.feature:98","historyId":"3d548df40e77001dd112446f2a47211f","time":{"start":1755182028304,"stop":1755182029384,"duration":1080},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 409(file:///app/src/test/resources/features/Books.feature:95)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 409(file:///app/src/test/resources/features/Books.feature:95)\n","steps":[{"name":"Given  a book with ID 2 exists","time":{"start":1755182028304,"stop":1755182028662,"duration":358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"And  a book with ID 3 exists","time":{"start":1755182028662,"stop":1755182029042,"duration":380},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When  I update the book with ID: 2 with New ID: 3, Title: Updated Book, Description: Book Description, Page Count: 100, Excerpt: Update, Publish Date: 2025-04-03T00:00:00","time":{"start":1755182029042,"stop":1755182029383,"duration":341},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Then  the response status code should be 409","time":{"start":1755182029383,"stop":1755182029384,"duration":1},"status":"failed","statusMessage":"Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>","statusTrace":"java.lang.AssertionError: Status code value mismatch. | Expected: 409 | Actual: 200 expected:<409> but was:<200>\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat stepDefinitions.CommonApiSteps.verifyResponseStatusCode(CommonApiSteps.java:31)\n\tat ✽.the response status code should be 409(file:///app/src/test/resources/features/Books.feature:95)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"a989d11da5ec"},{"name":"thread","value":"57@a989d11da5ec.main(1)"},{"name":"feature","value":"Books"},{"name":"story","value":"Update a book ID to already existing ID"},{"name":"suite","value":"Books"},{"name":"testClass","value":"Update a book ID to already existing ID"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///app/src/test/resources/features/Books.feature"},{"name":"package","value":"src.test.resources.features.Books_feature.Books"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"description","value":"Book Description"},{"name":"excerpt","value":"Update"},{"name":"id","value":"2"},{"name":"new_id","value":"3"},{"name":"page_count","value":"100"},{"name":"publish_date","value":"2025-04-03T00:00:00"},{"name":"title","value":"Updated Book"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"72e0072b23abe9cc.json","parameterValues":["Book Description","Update","2","3","100","2025-04-03T00:00:00","Updated Book"]}